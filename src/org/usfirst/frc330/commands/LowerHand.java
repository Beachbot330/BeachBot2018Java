// RobotBuilder Version: 2.0BB
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc330.commands;
import edu.wpi.first.wpilibj.command.BBCommand;
import org.usfirst.frc330.Robot;
import org.usfirst.frc330.constants.LiftConst;
import org.usfirst.frc330.util.Logger;

import com.ctre.phoenix.motorcontrol.ControlMode;

/**
 *
 */
public class LowerHand extends BBCommand {

    public LowerHand() {

    
        requires(Robot.hand);

    }

    // Called just before this Command runs the first time
    @Override
    protected void initialize() {
    	if(Robot.hand.getMode() == ControlMode.Position || Robot.hand.getMode() == ControlMode.MotionMagic) {
    		Logger.getInstance().println("Current Setpoint: " + Robot.hand.getSetpoint(), Logger.Severity.INFO);
        	Robot.hand.setAngle(Robot.hand.getSetpoint() - LiftConst.stepSize);
    	}
    	else {
    		Logger.getInstance().println("Hand in mode: " + Robot.hand.getMode(), Logger.Severity.WARNING);
    		Logger.getInstance().println("Current position: " + Robot.hand.getHandAngle(), Logger.Severity.INFO);
        	Robot.hand.setAngle(Robot.hand.getHandAngle() - LiftConst.stepSize);
    	}
    }


    // Called repeatedly when this Command is scheduled to run
    @Override
    protected void execute() {
    }

    // Make this return true when this Command no longer needs to run execute()
    @Override
    protected boolean isFinished() {
        return true;
    }

    // Called once after isFinished returns true
    @Override
    protected void end() {
    	Logger.getInstance().println("Final Wrist Setpoint: " + Robot.hand.getSetpoint(), Logger.Severity.INFO);
    	Logger.getInstance().println("Final Wrist Position: " + Robot.hand.getHandAngle(), Logger.Severity.INFO);
    }

    // Called when another command which requires one or more of the same
    // subsystems is scheduled to run
    @Override
    protected void interrupted() {
    }
}
