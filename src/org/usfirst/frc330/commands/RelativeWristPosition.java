// RobotBuilder Version: 2.0BB
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc330.commands;
import edu.wpi.first.wpilibj.command.BBCommand;
import org.usfirst.frc330.Robot;
import org.usfirst.frc330.constants.*;

/**
 *
 */
public class RelativeWristPosition extends BBCommand {
	double TargetAngle;
    public RelativeWristPosition(double targetAngle) {
    	
    	TargetAngle = targetAngle;

        requires(Robot.hand);
        //requires(Robot.arm);

    }

    // Called just before this Command runs the first time
    @Override
    protected void initialize() {
    	double calculatedAngle = TargetAngle + (90 - Robot.arm.getArmAngle());
    	Robot.hand.setAngle(calculatedAngle);
    }

    // Called repeatedly when this Command is scheduled to run
    @Override
    protected void execute() {

    }

    // Make this return true when this Command no longer needs to run execute()
    @Override
    protected boolean isFinished() {
        return Robot.hand.getHandOnTarget();
    }

    // Called once after isFinished returns true
    @Override
    protected void end() {
    }

    // Called when another command which requires one or more of the same
    // subsystems is scheduled to run
    @Override
    protected void interrupted() {
    }
}

